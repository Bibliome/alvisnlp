<?xml version="1.0" encoding="UTF-8"?><alvisnlp-doc author="" beta="true" date="" short-target="XMIImport" target="fr.inra.maiage.bibliome.alvisnlp.bibliomefactory.modules.uima.XMIImport">
  <synopsis>
    <p>Reads files in XMI format using the AlvisNLP/ML proxy filesystem.</p>
  </synopsis>

  <module-doc>
    <description>
      <p><this/> reads <param>source</param> streams in XMI format. The source must contain documents and annotations using the AlvisNLP/ML proxy filesystem.</p>
      <p>See <module>XMIExport</module>.</p>
    </description>
    
    <param-doc mandatory="required" name="source" short-type="SourceStream" type="fr.inra.maiage.bibliome.util.streams.SourceStream">
      <p>Location where to read XMI file(s).</p>
    </param-doc>

	<param-doc default-value="text" mandatory="default: text" name="defaultSectionName" name-type="section" short-type="String" type="java.lang.String">
		<p>Name of the section for documents created out of XMI files that do not use the AlvisNLP/ML Proxy typesystem.</p>
	</param-doc>

	<param-doc default-value="false" mandatory="default: false" name="baseNameId" short-type="Boolean" type="java.lang.Boolean">
		<p>Use only the basename of source for documents created out of XMI files that do not use the AlvisNLP/ML Proxy typesystem (by default, use the absolute path).</p>
	</param-doc>

	<param-doc default-value="false" mandatory="default: false"
		name="ignoreMalformedXMI" short-type="Boolean" type="java.lang.Boolean">
		<p>Ignore files that do not contain XMI serialization.</p>
	</param-doc>

    <include-doc>fr.inra.maiage.bibliome.alvisnlp.bibliomefactory.modules.CorpusModuleParamsDoc</include-doc>
    <include-doc>fr.inra.maiage.bibliome.alvisnlp.core.corpus.creators.DocumentCreatorParamsDoc</include-doc>
    <include-doc>fr.inra.maiage.bibliome.alvisnlp.core.corpus.creators.SectionCreatorParamsDoc</include-doc>
    <include-doc>fr.inra.maiage.bibliome.alvisnlp.core.corpus.creators.AnnotationCreatorParamsDoc</include-doc>
    <include-doc>fr.inra.maiage.bibliome.alvisnlp.core.corpus.creators.TupleCreatorParamsDoc</include-doc>
</module-doc>
</alvisnlp-doc>