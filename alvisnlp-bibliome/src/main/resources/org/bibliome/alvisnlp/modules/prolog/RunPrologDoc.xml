<?xml version="1.0"?>
<!--
Copyright 2016, 2017 Institut National de la Recherche Agronomique

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<alvisnlp-doc author="" date="" target="org.bibliome.alvisnlp.modules.prolog.RunProlog">
<!--
Copyright 2016 Institut National de la Recherche Agronomique

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

  <synopsis>
    <p>Runs a Prolog program with the corpus data structure encoded as facts.</p>
  </synopsis>

  <module-doc>
    <description>
      <p>
	<this/> runs a Prolog program specified in two parameters:
	<ol>
	  <li><param name="theory"/> is read as a regular Prolog program;</li>
	  <li><param name="facts"/> generate a set of facts.</li>
	</ol>
	Additionally <param name="goals"/> specifies the goals of the Prolog programs, and an associated action expression that will be evaluated for each solution.
      </p>
      <p>
	<this/> will run generate facts and resolve goals for each element specified by <param name="target"/>.
      </p>
    </description>
  
    <param-doc name="target">
      <p>Top-level elements for which facts and goals are computed. This expression is evaluated as a list of elements with the corpus as context.</p>
    </param-doc>
  
    <param-doc name="theory">
      <p>Source of the main Prolog program.</p>
    </param-doc>
  
    <param-doc name="active">
      <p>This expression is evaluated as a boolean with the corpus as the context element, the module will process the document only if the result is true.</p>
    </param-doc>
  
    <param-doc name="createAnnotations">
      <p>Either the goal actions may create annotations.</p>
    </param-doc>
  
    <param-doc name="goals">
      <p>Goal specifications.</p>
    </param-doc>
  
    <param-doc name="constantAnnotationFeatures">
      <p>Constant features to add to each annotation created by this module</p>
    </param-doc>
  
    <param-doc name="constantDocumentFeatures">
      <p>Constant features to add to each document created by this module</p>
    </param-doc>
  
    <param-doc name="createDocuments">
      <p>Either the goal actions may create documents.</p>
    </param-doc>
  
    <param-doc name="createRelations">
      <p>Either the goal actions may create relations.</p>
    </param-doc>
  
    <param-doc name="constantRelationFeatures">
      <p>Constant features to add to each relation created by this module</p>
    </param-doc>
  
    <param-doc name="createSections">
      <p>Either the goal actions may create sections.</p>
    </param-doc>
  
    <param-doc name="setArguments">
      <p>Either the goal actions may set tuple arguments.</p>
    </param-doc>
  
    <param-doc name="constantSectionFeatures">
      <p>Constant features to add to each section created by this module</p>
    </param-doc>
  
    <param-doc name="setFeatures">
      <p>Either the goal actions may add element features.</p>
    </param-doc>
  
    <param-doc name="facts">
      <p>Fact specifications.</p>
    </param-doc>
  
    <param-doc name="deleteElements">
      <p>Either the goal actions may delete elements.</p>
    </param-doc>
  
    <param-doc name="createTuples">
      <p>Either the goal actions may create tuples.</p>
    </param-doc>
  
    <param-doc name="addToLayer">
      <p>Either the goal actions may add annotations to layers.</p>
    </param-doc>
  
    <param-doc name="removeFromLayer">
      <p>Either the goal actions may remove annotations from layers.</p>
    </param-doc>
  
    <param-doc name="constantTupleFeatures">
      <p>Constant features to add to each tuple created by this module</p>
    </param-doc>
  <param-doc name="userFunctions"><p>Set user functions available for this module. If this module is a sequence, then all compounds inherit its functions.</p></param-doc></module-doc>
</alvisnlp-doc>
