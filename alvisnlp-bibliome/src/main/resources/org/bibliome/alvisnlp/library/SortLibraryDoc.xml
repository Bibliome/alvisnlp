<?xml version="1.0"?>
<!--
Copyright 2016, 2017 Institut National de la Recherche Agronomique

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<alvisnlp-doc target="org.bibliome.alvisnlp.library.ConcreteSortLibrary" short-target="sort">
<!--
Copyright 2016 Institut National de la Recherche Agronomique

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<synopsis>
  <p>Functions to sort lists of elements.</p>
  <p>The functions in this library come in three versions:
  <ul>
    <li><em>simple sort</em>: the list is sorted, duplicates and equivalent elements are kept;</li>
    <li><em>sort and remove duplicates</em>: the list is sorted and duplicates are removed, however equivalent elements are kept (modifier: "u");</li>
    <li><em>sort and remove equivalents</em>: the list is sorted and equivalent elements are removed (modifier: "n").</li>
  </ul>
  </p>
</synopsis>

  <library-doc>
    <function-doc first-ftor="comp" synopsis="sort:comp(list, comparator)">
      <p>Evaluates <em>list</em> as a list of elements, then sorts the result according to the expression <em>comparator</em>. The <em>comparator</em> expression is evaluated as an integer and must return a number below zero (lower than), zero (equals) or above zero (greater than).</p>
    </function-doc>
  
    <function-doc first-ftor="ival" synopsis="sort:ival(list, value)">
      <p>Evaluates <em>list</em> as a list of elements, then evaluates <em>value</em> as an integer for each element. Returns the list sorted by <em>value</em>.</p>
  	</function-doc>
  	
    <function-doc first-ftor="dval" synopsis="sort:dval(list, value)">
      <p>Evaluates <em>list</em> as a list of elements, then evaluates <em>value</em> as a double for each element. Returns the list sorted by <em>value</em>.</p>
  	</function-doc>
  	
    <function-doc first-ftor="sval" synopsis="sort:sval(list, value)">
      <p>Evaluates <em>list</em> as a list of elements, then evaluates <em>value</em> as a string for each element. Returns the list sorted by <em>value</em> (lexical sort).</p>
	</function-doc>
	  
    <function-doc first-ftor="ucomp" synopsis="sort:ucomp(list, comparator)">
    	<p>Same as <function name="comp"/>, remove duplicates.</p>
    </function-doc>
  
    <function-doc first-ftor="uival" synopsis="sort:uival(list, value)">
    	<p>Same as <function name="ival"/>, remove duplicates.</p>
	</function-doc>
	  
    <function-doc first-ftor="udval" synopsis="sort:udval(list, value)">
    	<p>Same as <function name="dval"/>, remove duplicates.</p>
    </function-doc>
  
    <function-doc first-ftor="usval" synopsis="sort:usval(list, value)">
    	<p>Same as <function name="sval"/>, remove duplicates.</p>
    </function-doc>
  
    <function-doc first-ftor="ncomp" synopsis="sort:ncomp(list, comparator)">
    	<p>Same as <function name="comp"/>, remove equivalents.</p>
    </function-doc>
  
    <function-doc first-ftor="nival" synopsis="sort:nival(list, value)">
    	<p>Same as <function name="ival"/>, remove equivalents.</p>
    </function-doc>
  
    <function-doc first-ftor="ndval" synopsis="sort:ndval(list, value)">
    	<p>Same as <function name="dval"/>, remove equivalents.</p>
  	</function-doc>
  	
    <function-doc first-ftor="nsval" synopsis="sort:nsval(list, value)">
    	<p>Same as <function name="sval"/>, remove equivalents.</p>
  	</function-doc>
  	
    <function-doc first-ftor="reverse" synopsis="sort:reverse(list)">
    	<p>Evaluates <em>list</em> as a list of elements and returns this list reversed.</p>
    </function-doc>
  </library-doc>
</alvisnlp-doc>
