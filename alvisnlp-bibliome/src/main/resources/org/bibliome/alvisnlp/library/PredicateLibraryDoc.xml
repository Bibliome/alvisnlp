<?xml version="1.0"?>
<!--
Copyright 2016, 2017 Institut National de la Recherche Agronomique

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<alvisnlp-doc short-target="pred" target="org.bibliome.alvisnlp.library.ConcretePredicateLibrary">
<!--
Copyright 2016 Institut National de la Recherche Agronomique

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<synopsis>
  <p/>
</synopsis>

  <library-doc>
    <function-doc first-ftor="any" synopsis="pred:any(c, pred)">
      <p>Evaluates <em>c</em> as a list of elements, then for each element evaluates <em>pred</em> as a boolean. Returns true if at least one evaluates as <em>true</em>.</p>
    </function-doc>

    <function-doc first-ftor="all" synopsis="pred:all(c, pred)">
      <p>Evaluates <em>c</em> as a list of elements, then for each element evaluates <em>pred</em> as a boolean. Returns true if all evaluate as <em>true</em>.</p>
    </function-doc>

    <function-doc first-ftor="enum-while" synopsis="pred:enum-while:varName(start, end, expr, condition)">
      <p>Evaluates <em>start</em> and <em>end</em> as integers, then assigns to <em>varName</em> each value between <em>start</em> (inclusive) and <em>end</em> (exclusive) and evaluates <em>expr</em> as a list of elements. Before evaluating <em>expr</em>, evaluates <em>condition</em> as a boolean. If <em>condition</em> is false, then stops iterating the list. Returns all elements in a single list.</p>
    </function-doc>

    <function-doc first-ftor="enum-while" synopsis="pred:enum-while:varName(start, expr, condition)">
    	<p/>
    </function-doc>

    <function-doc first-ftor="enumerate" synopsis="pred:enumerate:varName(start, end, expr)">
      <p>Evaluates <em>start</em> and <em>end</em> as integers, then assigns to <em>varName</em> each value between <em>start</em> (inclusive) and <em>end</em> (exclusive) and evaluates <em>expr</em> as a list of elements. Returns all elements in a single list.</p>
    </function-doc>
  </library-doc>
</alvisnlp-doc>
