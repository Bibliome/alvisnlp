<?xml version="1.0"?>
<!--
Copyright 2016, 2017 Institut National de la Recherche Agronomique

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<alvisnlp-doc target="org.bibliome.alvisnlp.library.ConcreteStringLibrary" short-target="str">
<!--
Copyright 2016 Institut National de la Recherche Agronomique

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<synopsis>
  <p>Functions to manipulate character strings.</p>
</synopsis>

  <library-doc>
    <function-doc first-ftor="replace" synopsis="str:replace(target, search, replace)">
      <p>Evaluates <em>target</em>, <em>search</em> and <em>replace</em> as strings, then returns <em>target</em> with all non-overlapping occurrences of <em>search</em> substituted with <em>replace</em>.</p>
    </function-doc>
  
    <function-doc first-ftor="upper" synopsis="str:upper(target)">
      <p>Evaluates <em>target</em> as a string and returns it with all characters converted to upper case.</p>
    </function-doc>

    <function-doc first-ftor="lower" synopsis="str:lower(target)">
      <p>Evaluates <em>target</em> as a string and returns it with all characters converted to lower case.</p>
    </function-doc>

    <function-doc first-ftor="sub" synopsis="str:sub(target, from, to)">
      <p>Evaluates <em>target</em> as a string, <em>from</em> and <em>to</em> as integers, then returns the subsequence of <em>target</em> between indexes <em>from</em> (inclusive) and <em>to</em> (exclusive). Indexes start at 0.</p>
    </function-doc>
    
    <function-doc first-ftor="sub" synopsis="str:sub(target, from)">
      <p>Evaluates <em>target</em> as a string and <em>from</em> as an integer, then returns the subsequence of <em>target</em> from index <em>from</em> (inclusive) and <em>to</em> (exclusive)to its end. Indexes start at 0.</p>
    </function-doc>
    
    <function-doc first-ftor="before" synopsis="str:after(target, sub)">
      <p>Evaluates <em>target</em> and <em>sub</em> as strings, then returns the substring of <em>target</em> after the first occurrence of <em>sub</em>. If <em>sub</em> cannot be found, then this function returns <em>target</em>.</p>
    </function-doc>

    <function-doc first-ftor="after" synopsis="str:before(target, sub)">
      <p>Evaluates <em>target</em> and <em>sub</em> as strings, then returns the substring of <em>target</em> before the first occurrence of <em>sub</em>. If <em>sub</em> cannot be found, then this function returns <em>target</em>.</p>
    </function-doc>
    
    <function-doc first-ftor="after" synopsis="str:after:sub(target)">
      <p>Evaluates <em>target</em> as a string, then returns the substring of <em>target</em> after the first occurrence of <em>sub</em>. If <em>sub</em> cannot be found, then this function returns <em>target</em>.</p>
    </function-doc>
    
    <function-doc first-ftor="before" synopsis="str:before:sub(target)">
      <p>Evaluates <em>target</em> as a string, then returns the substring of <em>target</em> before the first occurrence of <em>sub</em>. If <em>sub</em> cannot be found, then this function returns <em>target</em>.</p>
    </function-doc>

    <function-doc first-ftor="len" synopsis="str:len(target)">
      <p>Evaluates <em>target</em> as a string, then returns the number of characters in the result.</p>
    </function-doc>
  
    <function-doc first-ftor="seds" synopsis="str:seds(target, pattern, replace)">
      <p>Evaluates <em>target</em>, <em>pattern</em> and <em>replace</em> as strings, then interprets <em>pattern</em> as a <a href="http://download.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html">Java Regular Expression</a>. This function returns <em>target</em> with all non-overlapping matches of <em>pattern</em> substituted with <em>replace</em>.</p>
    </function-doc>

    <function-doc first-ftor="join" synopsis="str:join(items, string, separator)">
      <p>Evaluates <em>items</em> as a list of elements and <em>separator</em> as a string. Then for each element of <em>items</em>, this function evaluates <em>string</em> as a string and returns a concatenation of the results seperated with <em>separator</em></p>
    </function-doc>

    <function-doc first-ftor="join" synopsis="str:join:separator(items, string)">
      <p>Evaluates <em>items</em> as a list of elements, then for each element of <em>items</em>, this function evaluates <em>string</em> as a string and returns a concatenation of the results seperated with <em>separator</em></p>
    </function-doc>

    <function-doc first-ftor="join" synopsis="str:join(items, string)">
      <p>Evaluates <em>items</em> as a list of elements, then for each element of <em>items</em>, this function evaluates <em>string</em> as a string and returns a concatenation of the results seperated with a single whitespace.</p>
    </function-doc>
  
    <function-doc first-ftor="equalsIgnoreCase" synopsis="str:equalsIgnoreCase(a, b)">
      <p>Evaluates <em>a</em> and <em>b</em> as strings, then returns either the two strings are equal ignoring the character case.</p>
    </function-doc>

    <function-doc first-ftor="index" synopsis="str:index(s, target)">
      <p>Evaluates <em>s</em> and <em>target</em> as strings, then returns the number of characters in <em>s</em> before the first occurrence of <em>target</em> in <em>s</em>. If there is no occurrence of <em>target</em> in <em>s</em>, then this function returns -1.</p>
    </function-doc>

    <function-doc first-ftor="rindex" synopsis="str:rindex(s, target)">
      <p>Evaluates <em>s</em> and <em>target</em> as strings, then returns the number of characters in <em>s</em> after the last occurrence of <em>target</em> in <em>s</em>. If there is no occurrence of <em>target</em> in <em>s</em>, then this function returns -1.</p>
    </function-doc>

    <function-doc first-ftor="trim" synopsis="str:trim(s)">
      <p>Evaluates <em>s</em> as a string, then returns the result with leading and trailing whitespace characters removed.</p> 
    </function-doc>

    <function-doc first-ftor="normalizeSpace" synopsis="str:normalizeSpace(s)">
      <p>Evaluates <em>s</em> as a string, then returns the result with leading and trailing whitespace characters removed, and sequences of whitespaces characters replaced with a single space character.</p> 
    </function-doc>

    <function-doc first-ftor="diacritics" synopsis="str:diacritics(s)">
      <p>Evaluates <em>s</em> as a string, then returns the result with diacritics removed.</p>
    </function-doc>

    <function-doc first-ftor="levenshtein" synopsis="str:levenshtein(a, b)">
      <p>Evaluates <em>a</em> and <em>b</em> as strings, then returns the edit distance between the results.</p>
    </function-doc>

    <function-doc first-ftor="levenshteinSimilar" synopsis="str:levenshteinSimilar(a, b, d)">
      <p>Evaluates <em>a</em> and <em>b</em> as strings and <em>d</em> as a float, then returns either the edit distance between <em>a</em> and <em>b</em> is lower or equal than <em>d</em>. This function is useful for approximate string matching.</p>
    </function-doc>

    <function-doc first-ftor="cmp" synopsis="str:cmp(a, b)">
      <p>Evaluates <em>a</em> and <em>b</em> as strings, then compares the results. This function returns -1, 0 or 1 when <em>a</em> is lower, equal or greater than <em>b</em>.</p> 
    </function-doc>

    <function-doc first-ftor="padr" synopsis="str:padr(s, n)">
      <p>Forces <em>s</em> to length <em>n</em>. If shorter, then this function adds as many spaces necessary at the end. If longer, then this function truncates <em>s</em>.</p>
    </function-doc>

    <function-doc first-ftor="padl" synopsis="str:padl(s, n)">
      <p>Forces <em>s</em> to length <em>n</em>. If shorter, then this function adds as many spaces necessary at the beginning. If longer, then this function truncates <em>s</em>.</p>
    </function-doc>

    <function-doc first-ftor="padr" synopsis="str:padr:filler(s, n)">
      <p>Forces <em>s</em> to length <em>n</em>. If shorter, then this function adds as many <em>filler</em> necessary at the end. If longer, then this function truncates <em>s</em>.</p>
    </function-doc>

    <function-doc first-ftor="padl" synopsis="str:padl:filler(s, n)">
      <p>Forces <em>s</em> to length <em>n</em>. If shorter, then this function adds as many <em>filler</em> necessary at the beginning. If longer, then this function truncates <em>s</em>.</p>
    </function-doc>

    <function-doc first-ftor="basename" synopsis="str:basename(path)">
      <p>Treats <em>path</em> as a file path and returns the last element of <em>path</em>.</p>
    </function-doc>

    <function-doc first-ftor="regrp" synopsis="str:regrp(s, re, n)">
      <p>Compiles <em>re</em> as a regular expression and searches in <em>s</em>. This function returns the <em>n</em> capturing group of the regular expression.</p>
    </function-doc>

    <function-doc first-ftor="hash" synopsis="str:hash(s)">
      <p>Returns a hash code computed from <em>s</em>.</p>
    </function-doc>

    <function-doc first-ftor="split" synopsis="str:split:separator:feature(target)">
      <p>Evaluate <em>target</em> as a string, then splits it by the first character of <em>separator</em>. The adds each string into the context feature named <em>feature</em>. Feature modification must be allowed.</p>
    </function-doc>
  </library-doc>
</alvisnlp-doc>
