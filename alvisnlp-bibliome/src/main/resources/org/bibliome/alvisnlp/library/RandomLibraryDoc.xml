<?xml version="1.0"?>
<!--
Copyright 2016, 2017 Institut National de la Recherche Agronomique

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<alvisnlp-doc target="org.bibliome.alvisnlp.library.ConcreteRandomLibrary" short-target="random">
<!--
Copyright 2016 Institut National de la Recherche Agronomique

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<synopsis>
  <p>Pseudo-random number generator.</p>
</synopsis>

  <library-doc>
    <function-doc first-ftor="seed" synopsis="random:seed()">
      <p>Returns the seed of the current RNG.</p>
    </function-doc>

    <function-doc first-ftor="init" synopsis="random:init(seed)">
      <p>Initializes the current RNG with the specified <em>seed</em> evaluated as a double.</p>
    </function-doc>

    <function-doc first-ftor="init" synopsis="random:init()">
      <p>Initializes the current RNG with a seed generated from the internal clock. The value of the seed is returned.</p>
    </function-doc>

    <function-doc first-ftor="next" synopsis="random:next()">
      <p>Generates a random integer, double or boolean according to the context.</p>
    </function-doc>

    <function-doc first-ftor="next" synopsis="random:next(max)">
      <p>Evaluates <em>max</em> as an integer and generates a random integer, double or boolean according to the context. If this function must return an integer, then the result is between 0 (inclusive) and <em>max</em> (exclusive).</p>
    </function-doc>
  
    <function-doc first-ftor="gaussian" synopsis="random:gaussian()">
      <p>Generates a random double. The returned value behaves like a random variable with mean 0.0 and standard deviation 1.0.</p>
    </function-doc>
  
    <function-doc first-ftor="shuffle" synopsis="random:shuffle(it)">
      <p>Evaluates <em>it</em> as a list of elements, and returns this list randomly shuffled.</p>
    </function-doc>
  </library-doc>
</alvisnlp-doc>
