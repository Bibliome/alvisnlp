<?xml version="1.0"?>
<!--
Copyright 2016, 2017 Institut National de la Recherche Agronomique

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<alvisnlp-doc author="" date="" target="org.bibliome.alvisnlp.modules.cadixe.AlvisAEReader2">
<!--
Copyright 2016 Institut National de la Recherche Agronomique

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

  <synopsis>
    <p><this/> reads documents and annotations from an AlvisAE campaign.</p>
  </synopsis>

  <module-doc>
    <description>
      <p><this/> reads an AlvisAE server database and imports documents and annotation sets from an annotation campaign. The database connection is specified with <param name="url"/>, <param name="username"/>, <param name="password"/> and <param name="schema"/>. The <param name="campaignId"/> parameter specifies the campaign identifier in the AlvisAE database (the AlvisAE client displays this identifier).</p>

      <p>
	All AlvisAE annotations, including text-bound annotations, will be represented in AlvisNLP/ML as relation tuples, in a relation named after the annotation type.
	<ul>
	  <li>For <em>text-bound</em> annotations, each fragment is represented in an annotation stored in the layer <param name="fragmentsLayerName"/>. The tuple references the fragments through its arguments; their role name is <param name="fragmentRolePrefix"/> with the fragment order appended (starting at zero). Thus a single-fragment annotation will have a single argument with role <code>frag0</code>. The type of the annotation is stored in the feature <param name="typeFeature"/> of the tuple and of each fragment.</li>
	  <li>A <em>group</em> tuple references its items through its arguments; their role name is <param name="itemRolePrefix"/> with the item order appended (starting at zero).</li>
	  <li>A <em>relation</em> tuple hareferences its arguments in a straightforward way.</li>
	</ul>
      </p>

      <p>
      </p>
    </description>
  
    <param-doc name="docExternalIds">
      <p>If set, <this/> imports only documents whose external id is included in the value. If not set, then <this/> imports all documents.</p>
    </param-doc>
  
    <param-doc name="constantAnnotationFeatures">
      <p>Constant features to add to each annotation created by this module</p>
    </param-doc>
  
    <param-doc name="typeFeature">
      <p>Feature that contains the type of the annotation.</p>
    </param-doc>
  
    <param-doc name="password">
      <p>User password for JDBC connection.</p>
    </param-doc>
  
    <param-doc name="campaignId">
      <p>Identifier of the AlvisAE campaign to import.</p>
    </param-doc>
  
    <param-doc name="userFeature">
      <p>Name of the feature where to store the name of the AlvisAE user that created the annotation.</p>
    </param-doc>
  
    <param-doc name="constantSectionFeatures">
      <p>Constant features to add to each section created by this module</p>
    </param-doc>
  
    <param-doc name="userNames">
      <p>If set, <this/> imports only annotation sets created by an user included in the value. If this parameter and <param name="userIds"/> are not set, <this/> imports annotations of all users.</p>
    </param-doc>
  
    <param-doc name="loadTextBound">
      <p>Either to import text-bound annotations.</p>
    </param-doc>
  
    <param-doc name="taskName">
      <p>If set, <this/> imports only annotation sets of tasks whose name is included in the value. If this parameter and <param name="taskId"/> are not set, <this/> imports annotations of all tasks.</p>
    </param-doc>

    <param-doc name="active">
      <p>An expression evaluated as a boolean with the corpus as the context element. This module processes the corpus if the result is <code>true</code></p>
    </param-doc>
  
    <param-doc name="itemRolePrefix">
      <p>Prefix of the roles of arguments that represent group items.</p>
    </param-doc>
  
    <param-doc name="taskFeature">
      <p>Name of the feature where to store the name task where the annotation belongs.</p>
    </param-doc>
  
    <param-doc name="constantDocumentFeatures">
      <p>Constant features to add to each document created by this module</p>
    </param-doc>
  
    <param-doc name="docIds">
      <p>If set, <this/> imports only documents whose external id is included in the value. If not set, then <this/> imports all documents.</p>
    </param-doc>
  
    <param-doc name="username">
      <p>PostgreSQL user name.</p>
    </param-doc>
  
    <param-doc name="loadGroups">
      <p>Either to import group annotations.</p>
    </param-doc>
  
    <param-doc name="taskId">
      <p>If set, <this/> imports only annotation sets of tasks whose id is included in the value. If this parameter and <param name="taskName"/> are not set, <this/> imports annotations of all tasks.</p>
    </param-doc>
  
    <param-doc name="constantRelationFeatures">
      <p>Constant features to add to each relation created by this module</p>
    </param-doc>
  
    <param-doc name="userIds">
      <p>If set, <this/> imports only annotation sets created by an user whose id is included in the value. If this parameter and <param name="userNames"/> are not set, <this/> imports annotations of all users.</p>
    </param-doc>
  
    <param-doc name="schema">
      <p>PostgreSQL schema.</p>
    </param-doc>
  
    <param-doc name="fragmentRolePrefix">
      <p>For tuples that represent text-bound annotations, prefix of the role of fragment arguments.</p>
    </param-doc>
  
    <param-doc name="sectionName">
      <p>Name of the unique section created in each document.</p>
    </param-doc>
  
    <param-doc name="docDescriptions">
      <p>If set, <this/> imports only documents whose description is included in the value. If not set, then <this/> imports all documents.</p>
    </param-doc>
  
    <param-doc name="fragmentTypeFeature">
      <p>In annotations that represent text-bound fragments, name of the feature where to store the type of the annotation.</p>
    </param-doc>
  
    <param-doc name="kindFeature">
      <p>Name of the relation feature containing the annotation kind (values are: <em>text-bound</em>, <em>group</em>, or <em>relation</em>).</p>
    </param-doc>
  
    <param-doc name="loadRelations">
      <p>Either to import relation annotations.</p>
    </param-doc>
  
    <param-doc name="head">
      <p>If <code>true</code>, then <this/> imports the <em>head</em> annotation set. If <code>false</code>, then <this/> imports the annotation set with version 1.</p>
    </param-doc>
  
    <param-doc name="url">
      <p>PostgreSQL database URL.</p>
    </param-doc>
  
    <param-doc name="fragmentsLayerName">
      <p>Name of the layer where to store text-bound annotation fragments.</p>
    </param-doc>
  
    <param-doc name="constantTupleFeatures">
      <p>Constant features to add to each tuple created by this module</p>
    </param-doc>
  
    <param-doc name="descriptionFeature">
      <p>Feature containing the document description.</p>
    </param-doc>
  
    <param-doc name="externalIdFeature">
      <p>Feature containing the document external id.</p>
    </param-doc>
  
    <param-doc name="createdFeature">
      <p>Feature containing the annotation creation date.</p>
    </param-doc>
    
    <param-doc name="oldModel">
      <p>Support database model for AlvisAE v0.3.</p>
    </param-doc>
  
    <param-doc name="sourceRolePrefix">
      <p>Prefix for the roles for source annotations, will only be used if <param name="loadDependencies"/> is true.</p>
    </param-doc>
  
    <param-doc name="loadDependencies">
      <p>Either to load dependencies if the annotation set task is a review.</p>
    </param-doc>
  
    <param-doc name="adjudicate">
      <p>Either to automatically adjudicate identical source annotations, implies <param name="loadDependencies"/>.</p>
    </param-doc>
  
    <param-doc name="referentFeature">
      <p>Name of the feature where to store back-reference of sources.</p>
    </param-doc>
  
    <param-doc name="annotationIdFeature">
      <p>Name of the feature where to store AlvisAE identifier of the annotation.</p>
    </param-doc>
  
    <param-doc name="annotationSetIdFeature">
      <p>Name of the feature where to store the identifier of the annotation set to which belongs the annotation.</p>
    </param-doc>

    <param-doc name="taskIdFeature">
      <p>Feature where to store the task identifier from which the annotation was imported.</p>
    </param-doc>

    <param-doc name="userIdFeature">
      <p>Feature where to store the user identifier from which the annotation was imported.</p>
    </param-doc>

    <param-doc name="htmlTagFeature">
      <p>Feature where to store HTML tag name for annotations imported from the HTML annotation set.</p>
    </param-doc>

    <param-doc name="unmatchedFeature">
      <p>Feature where to store the AlvisAE identifiers of unmatched annotations (for review annotation sets).</p>
    </param-doc>

    <param-doc name="htmlLayerName">
      <p>Name of the layer where to store annotations that represent HTML tags.</p>
    </param-doc>

    <param-doc name="userFunctions">
      <p>Set user functions available for this module. If this module is a sequence, then all compounds inherit its functions.</p>
    </param-doc>
  </module-doc>
</alvisnlp-doc>
