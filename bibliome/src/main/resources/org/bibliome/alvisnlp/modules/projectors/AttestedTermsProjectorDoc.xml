<?xml version="1.0"?>
<!--
Copyright 2016, 2017 Institut National de la Recherche Agronomique

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<alvisnlp-doc author="Robert Bossy" date="2010-10-28">
  <synopsis>
    <p>Projects a list of terms given in tree-tagger format.</p>
  </synopsis>

  <module-doc>
    <description>
      <p><this/> reads a list of terms from <param name="termsFile"/> and searches for these terms in sections. The terms must be in tree-tagger format: each line contains a token/POS/lemma and each term is terminated by a period/<em>SENT</em>. The searched string for each term is the concatenation of token surface forms, or lemma if <param name="lemmaKeys"/> is true, separated with a space character.</p>
      <p>The parameters <param name="warnDuplicateValues"/>, <param name="multipleValueAction"/>, <param name="errorDuplicateValues"/> and <param name="warnMultipleValues"/> control who <this/> reacts when encountering duplicate terms.</p>
      <p>The parameters <param name="normalizeSpace"/>, <param name="ignoreCase"/>, <param name="ignoreDiacritics"/> and <param name="ignoreWhitespace"/> control the matching of entries on the sections.</p>
      <p>The <param name="subject"/> parameter specifies which text of the section should be matched. There are two options:
      <ul>
	<li>the entries are matched on the contents of the section, <param name="subject"/> can also control if matches boundaries coincide with word delimiters;</li>
	<li>the entries are matched on the feature value of annotations of a given layer separated by a whitespace, in this way entries can be searched against word lemmas for instance.</li>
      </ul>
      </p>
      <p><this/> creates an annotation for each matched term and adds these annotations to the layer named <param name="targetLayerName"/>. The created annotations will have the features <param name="termFeatureName"/>, <param name="posFeatureName"/> and <param name="lemmaFeatureName"/> containing the concatenation of the corresponding term tokens surface form, POS tag and lemma respectively. In addition, the created annotations will have the feature keys and values defined in <param name="constantAnnotationFeatures"/>.</p>
    </description>
  
    <param-doc name="lemmaKeys">
      <p>Either to project lemmas instead of the forms.</p>
    </param-doc>
  
    <param-doc name="active">
      <p>This expression is evaluated as a boolean with the corpus as the context element, the module will process the document only if the result is true.</p>
    </param-doc>
      
    <param-doc name="normalizeSpace">
      <p>Match normalizing whitespace.</p>
    </param-doc>
  
    <param-doc name="multipleValueAction">
      <p>Either to stop when multiple entries with the same key is seen.</p>
    </param-doc>
  
    <param-doc name="constantAnnotationFeatures">
      <p>Constant features to add to each annotation created by this module</p>
    </param-doc>
  
    <param-doc name="subject">
      <p>Subject on which to project the dictionary.</p>
    </param-doc>
  
    <param-doc name="ignoreCase">
      <p>Match ignoring case.</p>
    </param-doc>
  
    <param-doc name="posFeatureName">
      <p>Name of the feature where to write the term POS tags.</p>
    </param-doc>
  
    <param-doc name="documentFilter">
      <p>Only process document that satisfy this filter.</p>
    </param-doc>
  
    <param-doc name="termsFile">
      <p>Attested terms file.</p>
    </param-doc>
  
    <param-doc name="errorDuplicateValues">
      <p>Either to stop when a duplicate entry is seen.</p>
    </param-doc>
  
    <param-doc name="sectionFilter">
      <p>Process only sections that satisfy this filter.</p>
    </param-doc>
  
    <param-doc name="lemmaFeatureName">
      <p>Name of the feature where to write the term lemma.</p>
    </param-doc>
  
    <param-doc name="ignoreDiacritics">
      <p>Match ignoring diacritics.</p>
    </param-doc>
  
    <param-doc name="ignoreWhitespace">
      <p>Match ignoring whitespace characters.</p>
    </param-doc>
  
    <param-doc name="termFeatureName">
      <p>Name of the feature where to write the term form.</p>
    </param-doc>
  
    <param-doc name="targetLayerName">
      <p>Name of the layer where to put match annotations.</p>
    </param-doc>
  <param-doc name="userFunctions"><p>Set user functions available for this module. If this module is a sequence, then all compounds inherit its functions.</p></param-doc></module-doc>
</alvisnlp-doc>
