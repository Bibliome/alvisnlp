<?xml version="1.0"?>
<!--
Copyright 2016, 2017 Institut National de la Recherche Agronomique

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<alvisnlp-doc author="Robert Bossy" date="2010-10-28">
  <synopsis>
    <p>Projects terms from a TiDI export.</p>
  </synopsis>

  <module-doc>
    <description>
      <p><this/> reads different files from a <a href="https://migale.jouy.inra.fr/redmine/projects/tydi">TyDI</a> text export, resolves all synonymies and projects the terms into sections.</p>
      <p>The parameters <param name="lemmaFile"/>, <param name="synonymsFile"/>, <param name="quasiSynonymsFile"/>, <param name="acronymsFile"/> and <param name="typographicVariationsFile"/> point to the paths to the corresponding TyDI file export.</p>
      <p>The parameters <param name="normalizeSpace"/>, <param name="ignoreCase"/>, <param name="ignoreDiacritics"/> and <param name="ignoreWhitespace"/> control the matching of entries on the sections.</p>
      <p>The <param name="subject"/> parameter specifies which text of the section should be matched. There are two options:
      <ul>
	<li>the entries are matched on the contents of the section, <param name="subject"/> can also control if matches boundaries coincide with word delimiters;</li>
	<li>the entries are matched on the feature value of annotations of a given layer separated by a whitespace, in this way entries can be searched against word lemmas for instance.</li>
      </ul>
      </p>
      <p><this/> creates an annotation for each matched entry and adds these annotations to the layer named <param name="targetLayerName"/>. The created annotations will have a feature named <param name="canonicalFormFeature"/> containing the canonical form of the matched term. In addition, the created annotations will have the feature keys and values defined in <param name="constantAnnotationFeatures"/>.</p>
    </description>
  
    <param-doc name="acronymsFile">
      <p>Path to the acronyms file.</p>
    </param-doc>
  
    <param-doc name="active">
      <p>This expression is evaluated as a boolean with the corpus as the context element, the module will process the document only if the result is true.</p>
    </param-doc>
      
    <param-doc name="normalizeSpace">
      <p>Match normalizing whitespace.</p>
    </param-doc>
  
    <param-doc name="multipleValueAction">
      <p>Either to stop when multiple entries with the same key is seen.</p>
    </param-doc>
  
    <param-doc name="lemmaFile">
      <p>Path to the file containing lemmas.</p>
    </param-doc>
  
    <param-doc name="constantAnnotationFeatures">
      <p>Constant features to add to each annotation created by this module</p>
    </param-doc>
  
    <param-doc name="quasiSynonymsFile">
      <p>Path to the quasi-synonyms file.</p>
    </param-doc>
  
    <param-doc name="subject">
      <p>Subject on which to project the dictionary.</p>
    </param-doc>
  
    <param-doc name="synonymsFile">
      <p>Path to the synonyms file.</p>
    </param-doc>
  
    <param-doc name="ignoreCase">
      <p>Match ignoring case.</p>
    </param-doc>
  
    <param-doc name="documentFilter">
      <p>Only process document that satisfy this filter.</p>
    </param-doc>
  
    <param-doc name="canonicalFormFeature">
      <p>Feature where to store the term canonical form.</p>
    </param-doc>
  
    <param-doc name="errorDuplicateValues">
      <p>Either to stop when a duplicate entry is seen.</p>
    </param-doc>
  
    <param-doc name="sectionFilter">
      <p>Process only sections that satisfy this filter.</p>
    </param-doc>
  
    <param-doc name="typographicVariationsFile">
      <p>Path to the typographic variations file.</p>
    </param-doc>
  
    <param-doc name="ignoreDiacritics">
      <p>Match ignoring diacritics.</p>
    </param-doc>
  
    <param-doc name="ignoreWhitespace">
      <p>Match ignoring whitespace characters.</p>
    </param-doc>
  
    <param-doc name="mergeFile">
      <p>Path to the merged terms file.</p>
    </param-doc>
 
    <param-doc name="targetLayerName">
      <p>Name of the layer where to put match annotations.</p>
    </param-doc>
  
    <param-doc name="saveDictFile">
      <p>Path of the file where to save the dictionary.</p>
    </param-doc>
  <param-doc name="userFunctions"><p>Set user functions available for this module. If this module is a sequence, then all compounds inherit its functions.</p></param-doc></module-doc>
</alvisnlp-doc>
